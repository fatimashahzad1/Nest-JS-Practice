// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String    @default("")
  address     String    @default("")
  phoneNumber String    @default("")
  country     String    @default("")
  bankNo      String    @default("")
  isAdmin     Boolean   @default(false)
  name        String
  posts       Post[]
  acceptTerms Boolean   @default(false)
  isVerified  Boolean?  @default(false)
  articles    Article[]
  followers   Follow[]  @relation("UserFollowers")
  following   Follow[]  @relation("UserFollowing")
}

model Follow {
  id          Int      @id @default(autoincrement())
  followerId  Int
  followingId Int
  createdAt   DateTime @default(now())

  follower  User @relation("UserFollowers", fields: [followerId], references: [id])
  following User @relation("UserFollowing", fields: [followingId], references: [id])

  @@unique([followerId, followingId]) // Prevent duplicate followsP
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  published Boolean? @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model Article {
  id            Int     @id @default(autoincrement())
  title         String
  description   String?
  estimatedTime String
  creator       User?   @relation(fields: [creatorId], references: [id])
  creatorId     Int?
}
